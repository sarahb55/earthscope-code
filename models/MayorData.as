/* * This Interface is for all of the game elements in the volcano game. * written by Sarah Block * November 30, 2007 */ package earthscope.models{		 import flash.events.EventDispatcher;import flash.events.Event;import flash.text.TextField;import earthscope.events.GameEvent;import earthscope.events.GameEvent;import earthscope.events.PuffOfSmokeEvent;import earthscope.events.RandomDogEvent;import earthscope.events.AnxiousTownPersonEvent;import earthscope.events.VolcanoWarningEvent;import earthscope.events.ScienceAdvisorEvent;import earthscope.events.BeachFestivalEvent;import earthscope.events.RumbleEvent;import earthscope.models.VolcanoData;import earthscope.text.GameText;import earthscope.events.EmailUpdateEvent;import earthscope.models.EmailData;import earthscope.utils.SoundPlayer;		public class MayorData extends GameData{				private var _volcano:VolcanoData;		private var _town:TownData;		private var _anxiety:Number= 0;		private var _increaseAnxietyRumble:Number = 1;		private var _increaseAnxietySmoke = 2;		private var _increaseAnxietyAnxiousTownsPerson = 3;		private var _debug:TextField;		private var _popularity:Number;		//Body parts		private var _body:int = 1;		private var _hair:int = 1;		private var _eyes:int = 1;		private var _nose:int = 1;		private var _clothes:int = 1;		private var _gender:String = GameText.FEMALE_DIRECTORY;		private var _file:String;		private var _emailData:EmailData;		private var _plusPop:SoundPlayer = new SoundPlayer();   		private var _minusPop:SoundPlayer = new SoundPlayer();				public function MayorData(emailData:EmailData){						trace("New mayor data created...");			_popularity = Math.random()*GameText.RANGE_POPULARITY + GameText.MIN_POPULARITY;			_popularity = Math.round(_popularity);			randomMayor();						trace("Initial popularity is = " + _popularity);						_emailData = emailData;			_emailData.addEventListener(EmailUpdateEvent.REPLY_YES, onEmailUpdate);			_emailData.addEventListener(EmailUpdateEvent.REPLY_NO, onEmailUpdate);						_plusPop.loadSound("sounds/popUp.mp3");			_minusPop.loadSound("sounds/popDown.mp3");								}				public function onEmailUpdate(e:EmailUpdateEvent):void{				changePopularity(_emailData.popularityChange);					}				public function randomMayor():void{						_body = Math.round(Math.random()*2) + 1;			_clothes  = Math.round(Math.random()*4) + 1;			_hair  = Math.round(Math.random()*3) + 1;						var val:Number = Math.random();						if(val < 0.5){				_gender = GameText.FEMALE_DIRECTORY;			}			else{								_gender = GameText.MALE_DIRECTORY;			}					}								override public function tick(tick:Number):void{						if(_town.warned == true){ //Town evacuation warning in effect								//changePopularity(GameText.CLOCK_LOOP_POPULARITY_CHANGE_AFTER_WARNING);											}						_debug.appendText("Mayor's Popularity  = " + _popularity);		}						override public function updateView():Boolean{return false; }				public function set hair(v:int):void{						_hair = v;		}				public function get hair():int{						return _hair;					}				public function set eyes(v:int):void{						_eyes = v;		}				public function get eyes():int{						return _eyes;					}				public function get clothes():int{						return _clothes;					}				public function set clothes(clothes:int):void{						_clothes = clothes;		}						public function get bodyFile():String{						_file = new String();						_file = GameText.PICTURE_DIRECTORY + GameText.MAYOR_DIRECTORY + _gender + GameText.BODY_DIRECTORY + GameText.ROOT_FILENAME + _body.toString() + GameText.FILE_TYPE;						trace(_file + _body);			return _file;						}				public function get hairDirectory():String{									return GameText.PICTURE_DIRECTORY + GameText.MAYOR_DIRECTORY + _gender + GameText.HAIR_DIRECTORY   + GameText.ROOT_DIRECTORY_NAME +_body.toString() + GameText.ROOT_FILE_SEPARATOR  + GameText.ROOT_FILENAME;					}				public function get clothesDirectory():String{									_file = GameText.PICTURE_DIRECTORY + GameText.MAYOR_DIRECTORY + _gender + GameText.CLOTHES_DIRECTORY   + GameText.ROOT_DIRECTORY_NAME +_body.toString() + GameText.ROOT_FILE_SEPARATOR  + GameText.ROOT_FILENAME;			return _file;		}				public function get eyesFile():String{						_file = new String();						_file = GameText.PICTURE_DIRECTORY + GameText.MAYOR_DIRECTORY + _gender + GameText.EYES_DIRECTORY + GameText.ROOT_DIRECTORY_NAME +  _eyes.toString() + GameText.FILE_TYPE;						return _file;										}				public function get noseFile():String{						return _file;					}				public function get hairFile():String{						_file = new String();						_file = GameText.PICTURE_DIRECTORY + GameText.MAYOR_DIRECTORY + _gender + GameText.HAIR_DIRECTORY   + GameText.ROOT_DIRECTORY_NAME +_body.toString() + GameText.ROOT_FILE_SEPARATOR  + GameText.ROOT_FILENAME + _hair.toString() + GameText.FILE_TYPE;			trace (_file);			return _file;					}				public function get clothesFile():String{						_file = new String();						_file = GameText.PICTURE_DIRECTORY + GameText.MAYOR_DIRECTORY + _gender + GameText.CLOTHES_DIRECTORY   + GameText.ROOT_DIRECTORY_NAME +_body.toString() + GameText.ROOT_FILE_SEPARATOR  + GameText.ROOT_FILENAME + _clothes.toString() + GameText.FILE_TYPE;						trace (_file);						return _file;		}				public function set body(val:int){						if(val >=1 && val <=3){				_body = val;			}			else{								_body = 0;			}		}				public function get gender():String{						return _gender;		}				public function set gender(gender:String):void{						_gender = gender;		}				public function get body():int{						return _body;		}				public function reset():void{						_anxiety = 0;			_popularity = Math.random()*GameText.RANGE_POPULARITY + GameText.MIN_POPULARITY;			_popularity = Math.round(_popularity);					}				public function setVolcano(volcano:VolcanoData){			_volcano = volcano;			_volcano.addEventListener(PuffOfSmokeEvent.PUFF_OF_SMOKE, volcanoPuffs);			_volcano.addEventListener(RumbleEvent.RUMBLE, volcanoRumbles);		}				public function setTown(town:TownData){			_town = town;			_town.addEventListener(AnxiousTownPersonEvent.HIGH_ANXIETY, highAnxiety);			_town.addEventListener(RandomDogEvent.DOG_RUNS_THROUGH_OFFICE, dogRunsThroughOffice);			_town.addEventListener(BeachFestivalEvent.BEACH_FESTIVAL, onBeachFestival);					}						public function requestScienceAdvisor(){						_debug.appendText("Mayor requests science advisor. ...  ");			dispatchEvent(new ScienceAdvisorEvent(ScienceAdvisorEvent.SCIENCE_ADVISOR));			_town.changePrepardness(GameText.INCREASE_TOWN_PREPARDNESS_ON_WATCH_SCIENTIST_VIDEO);								}				public function onBeachFestival(BeachFestivalEvent):void{						_debug.appendText("Mayor gets request for beach festival. ...  ");					}						public function cancelVolcanoEvacuationWarning(){						dispatchEvent(new VolcanoWarningEvent(VolcanoWarningEvent.MAYOR_CANCELS_WARNING));		}				private function clamp(num:Number):Number{			var retVal:Number = 0;						if(num > GameText.MAX_GAME_VARIABLE){								retVal = GameText.MAX_GAME_VARIABLE;							}			else if(num < GameText.MIN_GAME_VARIABLE){								retVal = GameText.MIN_GAME_VARIABLE;			}			else{								retVal = num;							}						return retVal;					}				public function maintainVolcanoEvacuationWarning(){						dispatchEvent(new VolcanoWarningEvent(VolcanoWarningEvent.MAYOR_MAINTAINS_WARNING));					}				public function requestSeismologyAdvisor(){						_debug.appendText("Mayor requests science advisor. ...  ");			dispatchEvent(new ScienceAdvisorEvent(ScienceAdvisorEvent.SEISMOLOGY_ADVISOR));			_town.changePrepardness(GameText.INCREASE_TOWN_PREPARDNESS_ON_WATCH_SCIENTIST_VIDEO);								}				public function requestGPSAdvisor(){						_debug.appendText("Mayor requests science advisor. ...  ");			dispatchEvent(new ScienceAdvisorEvent(ScienceAdvisorEvent.GPS_ADVISOR));			_town.changePrepardness(GameText.INCREASE_TOWN_PREPARDNESS_ON_WATCH_SCIENTIST_VIDEO);					}				public function get popularity():Number{						return _popularity;		}				public function changePopularity(num:Number){						_popularity += num;									_popularity = clamp(_popularity);						if(num > 0){								_plusPop.play(0,1);			}			else if (num < 0){								_minusPop.play(0,1);							}					}				public function mayorApprovesBeachFestival():void{						_town.mayorApprovesBeachFestival();			_popularity += GameText.BEACH_FESTIVAL_APPROVED_MAYORS_POPULARITY_INCREASE;		}				public function mayorDeniesBeachFestival():void{						_town.mayorDeniesBeachFestival();			_popularity += GameText.BEACH_FESTIVAL_DENIED_MAYORS_POPULARITY_DECREASE;					}				public function issueEvacuationWarning(){						_debug.appendText("Mayor dispatches warning event......  ");						dispatchEvent(new VolcanoWarningEvent(VolcanoWarningEvent.MAYOR_ISSUES_WARNING));		}				public function volcanoPuffs(PuffOfSmokeEvent):void{			_anxiety += _increaseAnxietySmoke;						_anxiety = clamp(_anxiety);			_debug.appendText("Mayor sees puff of smoke. Anxiety increases to: " + _anxiety + "....  ");		}				public function volcanoRumbles(RumbleEvent):void{			trace("Mayor hears volcano rumble.");						_anxiety += _increaseAnxietyRumble;			_anxiety = clamp(_anxiety);						_debug.appendText("Mayor hears a rumble. Mayor's anxiety increases to: " + _anxiety + "....  ");		}				public function highAnxiety(e:AnxiousTownPersonEvent):void{						//_debug.appendText("TV Monitor interrupts the ClockLoop with graph “NEWS FLASH!!!!” Cut to full screen video, TV News Anchor says we have a breaking news story from a protest taking place right now Cut to anxious townsperson - worries that the volcano looks like it may be trouble and tells the mayor to do something.");			_anxiety += GameText.INCREASE_MAYOR_ANXIETY_ANXIOUS_TOWNSPERSON;			_popularity += GameText.CHANGE_MAYOR_POPULARITY_ANXIOUS_TOWNSPERSON;			_anxiety = clamp(_anxiety);			_popularity = clamp(_popularity);					}				public function dogRunsThroughOffice(e:RandomDogEvent):void{						_debug.appendText("Mayor sees random dog run through office......  ");					}				public function evacuateTown(){						_debug.appendText("Mayor orders the town to evacuate......  ");			dispatchEvent(new VolcanoWarningEvent(VolcanoWarningEvent.MAYOR_ORDERS_EVACUATION));								}						public function setDebugField(text_field:TextField){			_debug = text_field;					}												}		}