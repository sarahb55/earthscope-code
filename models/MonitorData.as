package earthscope.models{	import flash.text.TextField;	import flash.events.Event;	import earthscope.events.GameEvent;	import earthscope.events.PuffOfSmokeEvent;	import earthscope.models.VolcanoData;	import earthscope.events.AnxiousTownPersonEvent;	import earthscope.events.EvacuationIgnoredEvent;	import earthscope.events.EvacuationUnderwayEvent;	import earthscope.events.*;	import earthscope.models.TownData;	import earthscope.models.MayorData;	import earthscope.text.GameText;	public class MonitorData extends GameData {		private var _debug:TextField;		private var _view = false;		private var _volcano:VolcanoData;		private var _townData:TownData;		private var _mayor:MayorData;		private var _seismologyVideo:Number = 0;		private var _gpsVideo:Number = 0;		private var _scienceAdvisorVideo:Number = 0;		private var _scienceAdvisor:Array = new Array();		private var _GPSscienceAdvisor:Array = new Array();		private var _seismoScienceAdvisor:Array = new Array();		private var _showGPSandSeismo:Boolean = false;		private var _showScienceAdvisorLowPop:Boolean = false;		private var _showScienceAdvisorLowPrep:Boolean = false;		private var _showScienceAdvisorLowMoney:Boolean = false;		private var _showScienceAdvisorHighAnxiety:Boolean = false;		private var _currentVideoFile:String = "TVloop.flv";		private var _defaultVideoFile:String = "TVloop.flv";		private var _advisorCount:int = 0;						public static  const _warningSucceeds:String =  new String("WarningBroadcastPositive.flv");		public static  const _warningFails:String =  new String("WarningBroadcastNegative.flv");		public static  const _evacuationOrdered:String =  new String("EvacuationOrdered.flv");		public static  const _evacuationFails:String =  new String("EvacuationIgnored.flv");		public static  const _evacuationIgnoredLowPrep:String =  new String("EvacuationIgnoredLowPrep.flv");		public static  const _evacuationIgnoredLowPop:String =  new String("EvacuationIgnoredLowPop.flv");		public static  const _evacuationIgnoredLowMoney:String =  new String("EvacuationIgnoredLowMoney.flv");		public static  const _evacuationUnderway:String =  new String("EvacuationUnderway.flv");		public static  const _anxiousTownsperson:String =  new String("AnxiousTownsperson.flv");		public static  const _scientistOnNews:String =  new String("ScienceAdvisorWorried.flv");		public static  const _scienceAdvisorLowPop:String = new String("ScienceAdvisorLowPop.flv");		public static  const _scienceAdvisorLowPrep:String = new String("ScienceAdvisorLowPrep.flv");		public static  const _scienceAdvisorLowMoney:String = new String("ScienceAdvisorLowMoney.flv");		public static  const _scienceAdvisorHighAnxiety:String = new String("ScienceAdvisorHiAnx.flv");		public static  const _playerLosesWrapup:String = new String("PlayerLosesWrapup.flv");		public static  const _playerWinsWrapup:String = new String("PlayerWinsWrapup.flv");		public static  const _onApparentQuiet:String = new String("AnswerphoneVQ.flv");		public static  const _onVolcanoWakesWarningCancelled:String = new String("VolcanoWakesUpReport1.flv");		public static  const _onVolcanoWakesTownStillWarned:String = new String("VolcanoWakesUpReport0.flv");		public function MonitorData() {			trace("Making a new televsion monitor data object");			init();		}				private function init():void {		_scienceAdvisor.push(new String("Instructions.flv"));		_scienceAdvisor.push(new String("ScienceAdvisor.flv"));		_scienceAdvisor.push(new String("ClickOnGPSorSeismo.flv"));		_GPSscienceAdvisor.push( new String("ClickOnGPSTime1.flv"));		_GPSscienceAdvisor.push(new String("ClickOnGPSTime2.flv"));		_GPSscienceAdvisor.push(new String("ClickOnGPSTime3.flv"));		_GPSscienceAdvisor.push( new String("ClickOnGPSTime4.flv"));		_seismoScienceAdvisor.push(new String("ClickOnSeismoTime1.flv"));		_seismoScienceAdvisor.push(new String("ClickOnSeismoTime2.flv"));		_seismoScienceAdvisor.push(new String("ClickOnSeismoTime3.flv"));		}		override public function tick(tick:Number):void {			trace("Updating monitor");		}		public function getVideoFile():String {							if(_currentVideoFile != null){										return _currentVideoFile;				}				else{										return _defaultVideoFile;				}						}		public function setDebugField(text_field:TextField) {			_debug = text_field;		}		public function setTownData(town:TownData) {			_townData = town;			_townData.addEventListener(AnxiousTownPersonEvent.HIGH_ANXIETY, highAnxiety);			_townData.addEventListener(EvacuationIgnoredEvent.EVACUATION_IGNORED, ignoreEvacuation);			_townData.addEventListener(EvacuationUnderwayEvent.TOWN_ACCEPTS_EVACUATION, evacuationUnderway);			_townData.addEventListener(ScientistOnNewsEvent.ADVISOR, scientistOnNews);			_townData.addEventListener(WarningEvent.TOWN_ACCEPTS_WARNING, townAcceptsWarning);			_townData.addEventListener(WarningEvent.TOWN_IGNORES_WARNING, townIgnoresWarning);		}		public function setMayor(mayor:MayorData):void {			if (mayor != null) {				_mayor = mayor;				_mayor.addEventListener(ScienceAdvisorEvent.SCIENCE_ADVISOR, scienceAdvisor);				_mayor.addEventListener(ScienceAdvisorEvent.SEISMOLOGY_ADVISOR, seismologyAdvisor);				_mayor.addEventListener(ScienceAdvisorEvent.GPS_ADVISOR, gpsAdvisor);			}		}		public function setVolcano(volcano:VolcanoData) {			if (volcano != null) {				_volcano = volcano;				_volcano.addEventListener(ScientistOnNewsEvent.ADVISOR, scientistOnNews);				_volcano.addEventListener(ApparentQuietEvent.VOLCANO_APPARENT_QUIET, onApparentQuiet);				_volcano.addEventListener(VolcanoWakesUpEvent.VOLCANO_WAKES_UP, onVolcanoWakesUp);							} else {								trace("volcano == null");			}		}				public function onApparentQuiet(onApparentQuiet){						if(_townData.warned == true){								_currentVideoFile = _onApparentQuiet;			}		}						public function onVolcanoWakesUp(VolcanoWakesUpEvent){						if(_townData.warned == false && _townData.warningCancelled == true){								_currentVideoFile = _onVolcanoWakesWarningCancelled;			}			else if(_townData.warned == true && _townData.warningCancelled == false){								_currentVideoFile = _onVolcanoWakesTownStillWarned;			}		}						public function scienceAdvisor(e:ScienceAdvisorEvent):void {						if(_mayor.popularity < GameText.MAYOR_POPULARITY_LOW && !_showScienceAdvisorLowPop){								_currentVideoFile = _scienceAdvisorLowPop;				_showScienceAdvisorLowPop = true;							}			else if(_townData.money < GameText.TOWN_MONEY_LOW && !_showScienceAdvisorLowMoney){								_currentVideoFile = _scienceAdvisorLowMoney;				_showScienceAdvisorLowMoney = true;							}			else if(_townData.anxiety > GameText.TOWN_ANXIETY_HIGH && !_showScienceAdvisorHighAnxiety){								_currentVideoFile = _scienceAdvisorHighAnxiety;				_showScienceAdvisorHighAnxiety = true;							}			else{							_currentVideoFile = _scienceAdvisor[_scienceAdvisorVideo];				_scienceAdvisorVideo++;				_scienceAdvisorVideo %= _scienceAdvisor.length;							}						_debug.appendText("Monitor shows science advisor video named... ");			_debug.appendText(_currentVideoFile + ". ");		}				public function seismologyAdvisor(e:ScienceAdvisorEvent):void {			_debug.appendText("Monitor shows Seismology advisor video... ");			_currentVideoFile = _seismoScienceAdvisor[_seismologyVideo];			_seismologyVideo++;			_seismologyVideo %= _seismoScienceAdvisor.length;			_debug.appendText(_currentVideoFile + ". ");		}				public function gpsAdvisor(e:ScienceAdvisorEvent):void {			_debug.appendText("Monitor shows GPS advisor video... ");			_currentVideoFile = _GPSscienceAdvisor[_gpsVideo];			_gpsVideo++;			_gpsVideo %= _GPSscienceAdvisor.length;			_debug.appendText(_currentVideoFile + ". ");		}				override public function updateView():Boolean {			return _view;		}		/*		public function volcano_puffs(PuffOfSmokeEvent):void{		trace("Monitor gets puff of smoke event");		_debug.appendText ("This video cuts to the Newsroom. The Anchor Desk Reporter (live actor) describes \		   the new activity on the volcano and says that some townspeople have become concerned.");		}*/		public function townIgnoresWarning(e:WarningEvent) {			_currentVideoFile = _warningFails;			_debug.appendText(_currentVideoFile + ": A banner across the bottom of the TV starts scrolling with “EVACUATION WARNING: Science Advisor (voice over phone): Ok Mayor, will do! TV News Anchor: The mayor has announced that we may need to be evacuated. Citizens of the town have received the news with some angry reactions. No one understands why they might have to evacuate, since the volcano doesn't seem dangerous. Maybe the mayor is crazy.");		}		public function townAcceptsWarning(e:WarningEvent) {			_currentVideoFile = _warningSucceeds;			_debug.appendText(_currentVideoFile + ": A banner across the bottom of the TV starts scrolling with “EVACUATION WARNING: …”. Science Advisor (voice over phone): Ok Mayor, will do! TV News Anchor: The mayor has announced that we may need to be evacuated. No one is happy, but the population seems to be taking things in hand and packing their belongings in case they have to leave quickly. Authorities are monitoring Mt. Leakytop carefully to look for futher signs of coming eruption. Stay tuned to Volcano News Network for new developments.");		}		public function highAnxiety(e:AnxiousTownPersonEvent):void {			trace("Monitor recieves AnxiousTownPersonEvent. ...  ");			_currentVideoFile = _anxiousTownsperson;			_debug.appendText(_currentVideoFile + ": Monitor recieves AnxiousTownPersonEvent... TV Monitor interrupts the TVLoop with graph “NEWS FLASH!!!!” Cut to full screen video, TV News Anchor says we have a breaking news story from a protest taking place right now in front of the Mayor’s Office. In the back ground, townspeople are protesting. Cut to anxious townsperson - worries that the volcano looks like it may be trouble and tells the mayor to do something....  ");		}		public function ignoreEvacuation(e:EvacuationIgnoredEvent) {					if(_townData.preparation < GameText.MIN_PREPARDNESS_FOR_EVACUATION && !_townData.warned){								_currentVideoFile = _evacuationIgnoredLowPrep;			}			else if(_townData.money < GameText.MIN_MONEY_FOR_EVACUATION){								_currentVideoFile = _evacuationIgnoredLowMoney;							}			else if(_mayor.popularity < GameText.MIN_POPULARITY_FOR_EVACUATION){				_currentVideoFile = _evacuationIgnoredLowPop;			}						_debug.appendText(_currentVideoFile + ": Monitor recieves EvacuationIgnoredEvent... ");						}		public function evacuationUnderway(e:EvacuationUnderwayEvent):void {			_currentVideoFile = _evacuationUnderway;			_debug.appendText(_currentVideoFile + ": Monitor recieves EvacuationUnderwayEvent.flv Animation of islanders evacuating, audio....  ");		}		public function scientistOnNews(ScientistOnNewsEvent):void {			trace("Monitor recieves ScientistOnNewsEven. ...  ");			_currentVideoFile = _scientistOnNews;			_debug.appendText(_currentVideoFile + ": Monitor recieves ScientistOnNewsEvent: Science Advisor: The GPS and the Seismograph are both indicating signs of new volcanic activity, consistent with the rapid movement of lava beneath the surface. Mt. Leakytop is showing unrest. The top is puffing lots of smoke. We see lots of upward movement of the GPS stations. That indicates the ground is deforming, probably because lava is nearing the surface. And our Seismographs are starting to show a swarm of earthquakes just below the surface. Other volcano monitoring stations noted these indicators just before an eruption. I think we will see an eruption soon! ");		}				public function onPlayerLoses(){						_currentVideoFile = _playerLosesWrapup;		}				public function onPlayerWins(){						_currentVideoFile = _playerWinsWrapup;		}	}}