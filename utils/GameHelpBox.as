package earthscope.utils {        //Imports    import flash.display.Shape;    import flash.display.Sprite;    import flash.geom.Rectangle;    import flash.events.MouseEvent;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;    import flash.text.TextFormat;	import flash.ui.Mouse;	import flash.filters.*;	import flash.net.*;	import earthscope.utils.SmallGameButton;	import earthscope.utils.DisplayGraphicsFiles;	import earthscope.text.GameText;	import earthscope.events.PlayerDecidesEvent;	import flash.events.EventDispatcher;	import flash.events.Event;	import flash.events.*;	import flash.text.*;	import flash.display.*;	import flash.text.*;			        //Class    public class GameHelpBox extends Sprite {                //Vars        protected var _box:DisplayGraphicsFiles;		protected var _holder:Sprite = new Sprite();		protected var _cancel:DisplayGraphicsFiles;        protected var _yesBtn:SmallGameButton;		protected var _noBtn:SmallGameButton;				protected var _textMessage:TextField;		protected var _msg:String;		protected var _file:String;		protected var _textYes:TextField;		protected var _textNo:TextField;		protected var _textCancel:TextField;				protected var _padding:Number;		protected var _btnHeight:Number;		protected var _btnWidth:Number;		protected var _clickedYes:Boolean = false;		protected var _clickedNo:Boolean = false;		protected var _clickedCancel:Boolean = false;		protected var _clicked = false;		protected var _loader:URLLoader;		protected var _format:TextFormat;		protected var _location:Rectangle;		var myFont:Font = new Fertigo();		 public function GameHelpBox(){			 			 super();			 			 addChild(_holder);			 _box = new DisplayGraphicsFiles();			 _box.loadFile(GameText.PICTURE_DIRECTORY + GameText.MESSAGE_BOX_BACK, false);			 _box.filters = [new DropShadowFilter() ] ;			 _box.scaleX *= 0.8;    		 _box.scaleY *= 0.5;						//_cancel = new DisplayGraphicsFiles();			//_cancel.loadFile(GameText.PICTURE_DIRECTORY + GameText.CANCEL_BOX, false);			//_cancel.x = _box.x + 25;			//_cancel.y = _box.y + 25;									 addChild(_box);			 //_box.addChild(_cancel);			 			 this.addEventListener(MouseEvent.CLICK, onClose);			 /*			 _yesBtn = new SmallGameButton(_box.x + 100, _box.y + 280, 40, 60, "yes");			 _noBtn = new SmallGameButton(_box.x + 200, _box.y + 280, 40, 60, "no");			 _box.addChild(_yesBtn);			 _box.addChild(_noBtn);			 			_yesBtn.addEventListener(MouseEvent.CLICK, yesClickHandler);			_noBtn.addEventListener(MouseEvent.CLICK, noClickHandler);        */			 		}		 		 public function onClose(MouseEvent):void{			 			 removeChild(_box);			 		 }		 		 public function loadText(file:String){			 			 _textMessage  = new TextField();			 addChild(_textMessage);			 			 _loader = new URLLoader();			 _loader.addEventListener(Event.COMPLETE, handleComplete);			 _loader.load(new URLRequest(file));			 _loader.dataFormat = URLLoaderDataFormat.TEXT;			 			 format();			 trace (_textMessage.width + _textMessage.height);			 addChild(_textMessage);			 		 }		 		 private function handleComplete(event:Event){						  _textMessage.text = _loader.data;			 		 }		 		 public function set location(rect:Rectangle):void{			 			 _box.x = rect.x + rect.width + 5;			 _box.y = rect.y + rect.height + 5;			 _location = rect;		 }		 		public function format(){									_textMessage.textColor = 0x000000;			_textMessage.wordWrap = true;			_textMessage.width = 300;						_textMessage.autoSize = TextFieldAutoSize.CENTER;			_textMessage.x = _box.x + 20;			_textMessage.y = _box.y + 20;			_textMessage.embedFonts = true;			_format = new TextFormat();			_format.font = myFont.fontName;			_format.size = 12;			_format.color = GameText.WHITE;			_textMessage.defaultTextFormat = _format;		}				public function yesClickHandler(MouseEvent):void{						_clickedYes = true;			trace("Yes clicked");			dispatchEvent(new PlayerDecidesEvent(PlayerDecidesEvent.CHOOSE_YES));			removeChild(_box);		}				public function noClickHandler(MouseEvent):void{			_clickedYes = false;			dispatchEvent(new PlayerDecidesEvent(PlayerDecidesEvent.CHOOSE_NO));			removeChild(_box);								}				public function get yes():Boolean{						return _clickedYes;		}		      }	}