package earthscope.utils{		import earthscope.utils.SeismoGrapher;	import earthscope.events.GameEvent;		import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;    import flash.text.TextFormat;	import flash.text.Font;	import fl.controls.Button;    import fl.controls.Label;    import fl.controls.RadioButton;    import fl.controls.RadioButtonGroup;	import flash.events.TimerEvent;	import flash.utils.Timer;	import flash.events.*;		public class SeismoDriver extends Sprite{				var dataArray:Array = new Array();		private var _graph:SeismoGrapher = new SeismoGrapher(500, 280);		private var _header:TextField = new TextField();		private var xPad = 80;		private var yPad = 30;		private var _format:TextFormat = new TextFormat();		private var _myFont:Font = new Arial();		private var _graphyY = 100;		private var _explanation:TextField = new TextField();		private var qre:RadioButtonGroup;		private var answers:Array = [ "The volcano is inactive (quiet).", "There are a swarm of small earthquakes.", "There is a big earthquake." ];		private var rb1:RadioButton = new RadioButton();		private var rb2:RadioButton = new RadioButton();		private var rb3:RadioButton = new RadioButton();										private var b1:Button = new Button();		private var b2:Button = new Button();		private var b3:Button = new Button();				private var _timer:Timer = new Timer(30, 10000000);		private var _tick:Number = 0;				private var v:Number = 40;		private var e:Number = 1;		private var loop:Number = 0;		private var a:Number = 1.5;    		public function onInactive(ev:MouseEvent){			a = 0.05;		}				public function onEarthquake(ev:MouseEvent){			a = 14;			e = 1;		}		public function onSwarms(ev:MouseEvent){			a = 3*Math.random() + 2.0;			e = 1;		}				public function  SeismoDriver(){			super();			trace("Creating SeismoDriver");			addChild(_graph);			_graph.x =  xPad;			_graph.y = _graphyY;			_timer.stop();			_timer.addEventListener(TimerEvent.TIMER,  updatePlot);						setUpWindow();			plot();		}				private function updatePlot(e:TimerEvent):void{						plot();		}		private function plotNoActivity(){						plotEarthquake();			a = 0;			//_timer.start();					}								private function updateNoActivity(){						updateEarthquake();											}				private function updateEarthquake(){												if(dataArray.length < 3){				return;			}									for(var i:int = 0; i < dataArray.length; i++){								dataArray[i].x--;			}						dataArray.shift();						e += 0.5;						var p:Object = new Object();							loop++;			var n:Number = Math.random()*3 - 3;			p.x = dataArray[dataArray.length - 1].x + 1;			p.y = a*Math.sin(loop + n)/Math.round(e) + Math.random()*0.02 - 0.02;							trace(p.x + " " + p.y + " " + e +  " " + v);			dataArray.push(p);						_graph.plot(dataArray);							if(e > v){									if(qre.selection.label == answers[1]){					v = Math.round(10*Math.random()) + 10;					a = Math.random() + 1.0;				}				else{					v = Math.round(80*Math.random()) + 40;					a = 0.3*a;				}				e = 1;							}															}								private function plotEarthquake(){						_graph.clearGraph();			dataArray = new Array();												var slope:Number = 0.25 + 0.5*Math.random();			for(var i:Number = 1; i < 280; i++){								e += 0.5;								if(e > v){										v = Math.round(20*Math.random()) + 20;					e = 1;									}								var p:Object = new Object();												p.x = i;				p.y = a*Math.sin(p.x)/Math.round(e) + Math.random()*0.3 - 0.3;				dataArray.push(p);											}						_graph.plot(dataArray);						loop = dataArray.length;						v = Math.round(80*Math.random()) + 20;					}						private function plotSteadyInflation(){									_graph.plot(dataArray);								}						public function plot(){						if(qre.selection.label == answers[0]){								a = 0.03;				if(dataArray.length < 3){					plotNoActivity();				}				else{					updateNoActivity();				}			}			else if(qre.selection.label == answers[1]){								v = Math.round(10*Math.random()) + 10;				if(dataArray.length < 3){					plotEarthquake();									}				else{					updateEarthquake();				}			}			else if(qre.selection.label == answers[2]){								 v = Math.round(100*Math.random()) + 40;								if(dataArray.length < 3){					plotEarthquake();					e = 1;				}				else{					updateEarthquake();									}							}					}				private function setUpWindow():void{												_header.x =  xPad; 			_header.y = yPad + 30; 			_format.font = _myFont.fontName;			_format.size = 24;			_format.color = 0x000000;			_header.autoSize = TextFieldAutoSize.LEFT			_header.defaultTextFormat = _format;			_header.text = "What does the Seismograph tell you about the volcano?";			addChild(_header);			_header.embedFonts = true;						_format.size = 16;												_explanation.x = 630;			_explanation.y = _graphyY;			_explanation.multiline = true;			_explanation.wordWrap = true;			_explanation.width = 260;			_explanation.autoSize = TextFieldAutoSize.LEFT;			_explanation.defaultTextFormat = _format;			_explanation.embedFonts = true;			_explanation.text = "The Seismometers that you installed on the volcano record vibrations within the Earth - earthquakes. The squiggly lines on the graph are a record of these movements. The bigger the squiggle, the more active the volcano. Press the button below to see what the graph might look like when..."									addChild(_explanation);						qre = new RadioButtonGroup("volcano");			rb1.label = answers[0];			rb2.label = answers[1];			rb3.label = answers[2];						rb1.width = 300;			rb2.width = 300;			rb3.width = 300;									rb1.group = rb2.group = rb3.group = qre;						rb1.move(_explanation.x,_graphyY + _explanation.height + 20);			rb2.move(_explanation.x,_graphyY + _explanation.height + 50);			rb3.move(_explanation.x,_graphyY + _explanation.height + 80);						rb2.selected = true;			addChild(rb1);			addChild(rb2);			addChild(rb3);						addChild(b1);			addChild(b2);						b1.label = "Stop";						b1.move(_explanation.x + 130, _explanation.height + 210);						b2.label = "Start";			b2.move(_explanation.x , _explanation.height + 210);						b3.label = "Done";			b3.move(_explanation.x - 350, _explanation.height + 210);						addChild(b3);						b1.addEventListener(MouseEvent.CLICK, clearGraph);			b2.addEventListener(MouseEvent.CLICK, plotPoints);			b3.addEventListener(MouseEvent.CLICK, onDone);						rb1.addEventListener(MouseEvent.CLICK, onInactive);			rb2.addEventListener(MouseEvent.CLICK, onSwarms);			rb3.addEventListener(MouseEvent.CLICK, onEarthquake);											}				public function onDone(e:MouseEvent):void{						dispatchEvent(new GameEvent(GameEvent.CHANGE));			_timer.stop();			trace("Clicked done");		}				public function plotPoints(e:MouseEvent):void{						_timer.start();																	}				public function start():void{						_timer.start();		}				public function stop():void{						_timer.stop();		}				public function clearGraph(e:MouseEvent):void{									_timer.stop();		}					}			}