package earthscope.utils{		 import flash.display.Shape;    import flash.display.Sprite;    import flash.geom.Rectangle;    import flash.events.MouseEvent;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;    import flash.text.TextFormat;	import flash.ui.Mouse;	import flash.filters.BevelFilter;	import flash.filters.BitmapFilterQuality;	import flash.filters.BitmapFilterType;	import flash.net.URLRequest;	import flash.utils.Timer;	import flash.events.TimerEvent;		import earthscope.models.VolcanoData;	import earthscope.events.RumbleEvent;	import earthscope.text.GameText;	import earthscope.events.VolcanoWakesUpEvent;		import earthscope.utils.SeismoGrapher;			public class SeismoGraph extends Sprite{				private var _timer:Timer;		private var _box:Sprite;		private var _rect:Rectangle;		private var _numPoints:Number = 100;		private var points:Array;		private var _count:int = 0;		private var _spikeCount:int = 0;		private var _amplitude:Number = 1.0;		private var _volcano:VolcanoData;		private var _rumble:Boolean = false;		private var _pause:Boolean = false;		private var seismoGraph:SeismoGrapher;		private var v:Number = 40;		private var e:Number = 1;		private var loop:Number = 0;		private var a:Number = 1.5;				var dataArray:Array = new Array();				public function SeismoGraph(rect:Rectangle, volcano:VolcanoData){			trace ("Creating new draw moving graph object...");						_timer = new Timer(40);			_timer.addEventListener(TimerEvent.TIMER, updateGraph);			_timer.start();			_rect = rect;						seismoGraph = new SeismoGrapher(rect.width, rect.height);			seismoGraph.x = rect.x;			seismoGraph.y = rect.y;			addChild(seismoGraph);						_volcano = volcano;						_volcano.addEventListener(RumbleEvent.RUMBLE, rumble);			_volcano.addEventListener(VolcanoWakesUpEvent.VOLCANO_WAKES_UP, onVolcanoWakesUp);									buttonMode = true;			useHandCursor = true;									initGraph();						/*			_timer = new Timer(50);			_timer.addEventListener(TimerEvent.TIMER, updateGraph);			_timer.start();			_rect = rect;			_numPoints = _rect.width;			_box = new Sprite();						_volcano = volcano;			_volcano.addEventListener(RumbleEvent.RUMBLE, onRumble);			_volcano.addEventListener(RumbleEvent.RUMBLE, onRumble);			points = new Array(_numPoints);			*/			this.buttonMode = true;			this.useHandCursor = true;			this.mouseChildren = false;										}				public function onInactive(){			a = 0.05;		}				public function onEarthquake(){			a = 20;			e = 1;			loop = 1;		}		public function onSwarms(){			a = 3*Math.random() + _volcano.percentComplete/100;			v = Math.round(10*Math.random()) + 10;			e = 1;		}				private function onVolcanoWakesUp(VolcanoWakesUpEvent){			 onEarthquake();					}				private function rumble(RumbleEvent){						//onSwarms();					}				private function updateEarthquake(){												if(dataArray.length < 3){				return;			}									for(var i:int = 0; i < dataArray.length; i++){								dataArray[i].x--;			}						dataArray.shift();						e += 0.5;						var p:Object = new Object();							loop++;			var n:Number = Math.random()*3 - 3;			p.x = dataArray[dataArray.length - 1].x + 1;			p.y = a*Math.sin(loop + n)/Math.round(e) + Math.random()*0.02 - 0.02;							trace(p.x + " " + p.y + " " + e +  " " + v);			dataArray.push(p);						seismoGraph.plot(dataArray);							if(e > v){									if(_volcano.percentComplete > GameText.MIN_VOLCANO_STATE_FOR_VOLCANO_WAKES + 10){					onSwarms();				}				else{					v = Math.round(80*Math.random()) + 40;					a = 0.3*a;				}				e = 1;							}															}				public function onRumble(RumbleEvent):void{						_rumble = true;			trace("Seismograph detects rumble...\n");					}		private function initGraph():void{						seismoGraph .clearGraph();			dataArray = new Array();									for(var i:Number = 1; i < 300; i++){								e += 0.5;								if(e > v){										v = Math.round(20*Math.random()) + 20;					e = 1;									}								var p:Object = new Object();												p.x = i;				p.y = Math.random()*0.05 - 0.05; 				dataArray.push(p);											}						seismoGraph.plot(dataArray);						loop = dataArray.length;						v = Math.round(80*Math.random()) + 20;								}						public function setAmplitude(amp:Number){						_amplitude = amp;		}								public function drawGraph(){						with (_box.graphics) {                               beginFill(0xFFFF99, 0.1);                drawRect(_rect.x, _rect.y, _rect.width, _rect.height);                endFill();            }								}				public function pause(){						_timer.stop();		}				public function start(){						_timer.start();		}								public function updateGraph(TimerEvent){			updateEarthquake();		}					}							}