package earthscope.views{		import earthscope.controller.GameEngine;import earthscope.utils.AlertBox;import earthscope.models.VolcanoData;import earthscope.events.VolcanoEruptsEvent;import earthscope.utils.SeismoGraph;import earthscope.utils.GPSMonitor;import earthscope.utils.GameButton;import earthscope.utils.DisplayGraphicsFiles;import earthscope.text.GameText;import earthscope.utils.TinyGameButton;import flash.display.Sprite;import flash.text.TextField;import flash.text.TextFormat;import flash.text.StyleSheet;import flash.events.MouseEvent;import flash.text.TextFieldAutoSize;import flash.display.Shape;import flash.filters.DropShadowFilter;import flash.geom.ColorTransform;import earthscope.text.GameText;import flash.text.Font;import flash.text.AntiAliasType;import flash.display.*;import flash.geom.Rectangle;import flash.events.MouseEvent;import flash.system.System;import flash.filters.DropShadowFilter;import flash.net.navigateToURL;import flash.net.URLRequest;import flash.text.TextFieldAutoSize;import flash.display.Shape;import flash.filters.DropShadowFilter;import flash.geom.ColorTransform;import earthscope.text.GameText;import earthscope.utils.GameScoreTextField;import flash.text.Font;import flash.text.AntiAliasType;		public class GlobalScreenView  extends Sprite{		var leftBorder:DisplayGraphicsFiles;	var rightBorder:DisplayGraphicsFiles;	var upperBorder:DisplayGraphicsFiles;	var lowerBorder:DisplayGraphicsFiles;	var rect:Rectangle;	var rectBox:Sprite;	var buttonBox:Sprite;	var quitBtn:TinyGameButton;	var restartBtn:TinyGameButton;	var game:GameEngine;		private var _textf:TextField = new TextField();	var _format:TextFormat = new TextFormat();	var myFont:Font = new cancan();			public function GlobalScreenView(game:GameEngine){				rectBox = new Sprite();		buttonBox = new Sprite();		//rect = new Rectangle(0, 400, stage.width, stage.height);				addChild(rectBox);		addChild(buttonBox);				leftBorder = new DisplayGraphicsFiles() ;		leftBorder.loadFile(GameText.PICTURE_DIRECTORY + GameText.VERTICAL_BORDER);		addChild(leftBorder);		rightBorder = new DisplayGraphicsFiles();		rightBorder.loadFile(GameText.PICTURE_DIRECTORY + GameText.VERTICAL_BORDER);		addChild(rightBorder);		rightBorder.x = GameText.RIGHT_BORDER_X;		upperBorder = new DisplayGraphicsFiles();		upperBorder.loadFile(GameText.PICTURE_DIRECTORY + GameText.HORIZONTAL_BORDER);		addChild(upperBorder);				/*		lowerBorder = new DisplayGraphicsFiles();		lowerBorder.loadFile(GameText.PICTURE_DIRECTORY + GameText.HORIZONTAL_BORDER);		addChild(lowerBorder);		lowerBorder.y = GameText.LOWER_BORDER_Y;	*/				/*with (rectBox.graphics) {			                lineStyle(1, GameText.GREEN);                beginFill(GameText.GREEN, 1.0);                drawRect(0, GameText.LOWER_BORDER_Y + 20, 1000, 300 );                endFill();         }*/		 		rectBox = new Sprite();		with (rectBox.graphics) {			             				lineStyle(1, GameText.BROWN);                beginFill(GameText.BROWN, 1.0);                drawRect(20, GameText.LOWER_BORDER_Y + 128, 900, 32 );                endFill();         }		 		 rectBox.filters = [new DropShadowFilter()];								quitBtn = new TinyGameButton(GameText.RIGHT_BORDER_X - 100, GameText.LOWER_BORDER_Y + 130, 40, 100, GameText.EXIT_BTN);		addChild(quitBtn);					quitBtn.addEventListener(MouseEvent.CLICK, onQuit);				restartBtn = new TinyGameButton(GameText.RIGHT_BORDER_X - 200, GameText.LOWER_BORDER_Y + 130, 40, 100, GameText.RESTART_BTN);		addChild(restartBtn);					restartBtn.addEventListener(MouseEvent.CLICK, onRestart);					}				protected function formatText(val:TextField){											val.autoSize = TextFieldAutoSize.LEFT;			val.selectable = false;						_format.align = TextFieldAutoSize.LEFT;			_format.font = GameText.FONT;           //	val.embedFonts = true;						_format.color = GameText.WHITE;            _format.size = 18;								val.defaultTextFormat = _format;				//val.text = _value;						val.filters = null;												}		public function updateDisplay(){							}		private function showScore():void{									}			public function onQuit(MouseEvent):void{				navigateToURL(new URLRequest("../index.html"), "_self");			}			public function onRestart(MouseEvent):void{				navigateToURL(new URLRequest("index.html"), "_self");		System.exit(0);	}			}}