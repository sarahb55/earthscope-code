package earthscope.views{	import earthscope.controller.GameEngine;	import earthscope.utils.AlertBox;	import earthscope.models.MayorData;	import earthscope.events.VolcanoEruptsEvent;	import earthscope.utils.SeismoGraph;	import earthscope.utils.GPSMonitor;	import earthscope.utils.GameButtonMayor;	import earthscope.utils.DisplayGraphicsFiles;	import earthscope.utils.SoundPlayer;	import earthscope.text.GameText;	import earthscope.utils.GameButtonLarge;	import earthscope.utils.GameTitleTextField;	import flash.events.MouseEvent;	import fl.controls.ColorPicker;	import fl.events.ColorPickerEvent;	import flash.geom.ColorTransform;	import flash.display.Sprite;	public class MayorScreenViewStart extends Sprite {		var _back:DisplayGraphicsFiles;		var _game:GameEngine;		var _PLAYBtn:GameButtonMayor;		var _player:SoundPlayer;		var _mayor:MayorData;		var _maleBtn:GameButtonLarge;		var _femaleBtn:GameButtonLarge;		var _title:GameTitleTextField;		var _mayorDisplay:DisplayGraphicsFiles;		var _nextBtn:GameButtonMayor;		var _backBtn:GameButtonMayor;		var _hairBtn:GameButtonLarge;		var _eyesBtn:GameButtonLarge;		var _noseBtn:GameButtonLarge;		var _clothesBtn:GameButtonLarge;		var _randomBtn:GameButtonMayor;		var _backBtn2:GameButtonMayor;		var _backHair:GameButtonMayor;		var _PLAYClothes:GameButtonMayor;		var _colorPicker:ColorPicker;		var _scale:Number = 1.10;//Number to scale mayor by		var _mayors:Array;		var _hair:Array;		var _eyes:Array;		var _backClothes:GameButtonMayor;		var _mayorView:MayorView;		var _clothes:Array;		var _numClothes:int = 5;		var _numHair:int = 4;		var _numBodys:int = 3;		var _lowerBorder:DisplayGraphicsFiles;		var _yVal:int = 468;		var _xLeft:int = 60;		var _xRight:int = 530;		public function MayorScreenViewStart(game:GameEngine, mayor:MayorData) {			_back = new DisplayGraphicsFiles();			_back.loadFile(GameText.PICTURE_DIRECTORY + GameText.CHOOSE_MAYOR_BACKGROUND);			addChild(_back);			_back.x = GameText.BACK_X;			_back.y = GameText.BACK_Y;			//_mayorDisplay = new DisplayGraphicsFiles();			//_mayorDisplay.loadFile(GameText.PICTURE_DIRECTORY + GameText.UNKNOWN_MAYOR);			//addChild(_mayorDisplay);			_lowerBorder = new DisplayGraphicsFiles();		_lowerBorder.loadFile(GameText.PICTURE_DIRECTORY + GameText.LOWER_BORDER);		addChild(_lowerBorder);		_lowerBorder.y = GameText.LOWER_BORDER_Y;		_lowerBorder.x = GameText.LOWER_BORDER_X;						_mayorView = new MayorView(GameText.BACK_X + 150, GameText.BACK_Y + 25, mayor);			addChild(_mayorView);			_randomBtn = new GameButtonMayor(_xLeft, _yVal, 165, 60, GameText.RANDOM_BTN);			addChild(_randomBtn);			_randomBtn.addEventListener(MouseEvent.CLICK, onRandom);			//_backBtn = new GameButton(400, 320, 50, 60, GameText.PREVIOUS_SCREEN);			//_nextBtn = new GameButton(400, 320, 50, 60, GameText.NEXT);			_maleBtn = new GameButtonLarge(515 + GameText.BACK_X, 145 + GameText.BACK_Y, 120, 60, GameText.MALE);			addChild(_maleBtn);			_maleBtn.addEventListener(MouseEvent.CLICK, onChooseMale);			_femaleBtn = new GameButtonLarge(530 + GameText.BACK_X, 220 + GameText.BACK_Y, 120, 60, GameText.FEMALE);			addChild(_femaleBtn);			_femaleBtn.addEventListener(MouseEvent.CLICK, onChooseFemale);			_title = new GameTitleTextField(525 + GameText.BACK_X, 70 + GameText.BACK_Y, GameText.CHOOSE_MAYOR_TITLE);			addChild(_title);			_hairBtn = new GameButtonLarge(510 + GameText.BACK_X, 150 + GameText.BACK_Y, 120, 60, GameText.HAIR);			//_eyesBtn = new GameButtonLarge(510 + GameText.BACK_Y, 150 + GameText.BACK_X, 120, 60, GameText.EYES);			//_eyesBtn.addEventListener(MouseEvent.CLICK, onChooseEyes);			//_noseBtn = new GameButtonLarge(510 + GameText.BACK_Y, 200 + GameText.BACK_X, 120, 60, GameText.NOSE);			_clothesBtn = new GameButtonLarge(510 + GameText.BACK_Y, 200 + GameText.BACK_X, 120, 60, GameText.CLOTHES);			_clothesBtn.addEventListener(MouseEvent.CLICK, onChooseClothes);			_hairBtn.addEventListener(MouseEvent.CLICK, onChooseHair);			_PLAYBtn = new GameButtonMayor(_xRight, _yVal, 165, 60, GameText.PLAY_BTN);			_PLAYBtn.addEventListener(MouseEvent.CLICK, onMayorComplete);			addChild(_PLAYBtn);						_PLAYClothes = new GameButtonMayor(_xRight, _yVal, 165, 60, GameText.PLAY_BTN);			_PLAYClothes.addEventListener(MouseEvent.CLICK, onPLAYClothes);						_game = game;			_mayor = mayor;			_player = new SoundPlayer();			_mayors = new Array();			_hair = new Array();			//_eyes = new Array();			_clothes = new Array();			var file:String = new String();			_backBtn = new GameButtonMayor(_xLeft, _yVal, 50, 60, GameText.PREVIOUS_SCREEN);			_backBtn.addEventListener(MouseEvent.CLICK, onBackGender);			_backHair = new GameButtonMayor(_xLeft, _yVal, 50, 60, GameText.PREVIOUS_SCREEN);			_backHair.addEventListener(MouseEvent.CLICK, onBackHair);			_backClothes = new GameButtonMayor(_xLeft, _yVal, 50, 60, GameText.PREVIOUS_SCREEN);			_backClothes.addEventListener(MouseEvent.CLICK, onBackClothes);			_nextBtn = new GameButtonMayor(_xRight + 120, _yVal, 50, 60, GameText.NEXT_SCREEN);			_nextBtn.addEventListener(MouseEvent.CLICK, onGenderChosen);			_nextBtn.disabled = true;													}				private function onRandom(MouseEvent){			_mayor.randomMayor();			_mayorView.updateDisplay();			//onExitDesignMayorScreen();					}				public function get mayor():MayorData{									trace("Returning Mayor...");						trace(_mayor.hair + " " +  _mayor.clothes + " "  + _mayor.gender);						return _mayor;					}				private function onChooseHair(MouseEvent):void {			onExitChooseParts();			loadHairButtons();			updateMayor();		}				private function updateMayor():void{									_mayorView.updateDisplay();								}				private function loadMayors():void {			for (var i:int = 0; i < _numBodys; i++) {				var file:String = GameText.PICTURE_DIRECTORY + GameText.MAYOR_DIRECTORY + _mayor.gender + GameText.BUTTONS_DIRECTORY + GameText.BODY_DIRECTORY + GameText.ROOT_FILENAME;				var j:Number = i + 1;				file += j.toString() + GameText.FILE_TYPE;				trace(file);				_mayors[i] = new DisplayGraphicsFiles();				if (_mayors[i] != null) {					_mayors[i].loadFile(file, false);					addChild(_mayors[i]);					_mayors[i].x = i*90 + 472;					_mayors[i].y = 140;					_mayors[i].button = true;					_mayors[i].buttonMode = true;									}							}			_mayors[0].addEventListener(MouseEvent.CLICK, mayor1);			_mayors[1].addEventListener(MouseEvent.CLICK, mayor2);			_mayors[2].addEventListener(MouseEvent.CLICK, mayor3);		}				private function loadClothesButtons():void{									for (var i:int = 0; i < _numClothes; i++) {				var file:String = GameText.PICTURE_DIRECTORY+ GameText.MAYOR_DIRECTORY +  _mayor.gender + GameText.BUTTONS_DIRECTORY + GameText.CLOTHES_DIRECTORY + GameText.ROOT_FILENAME;				var j:Number = i + 1;				file += j.toString() + GameText.FILE_TYPE;				trace(file);				_clothes[i] = new DisplayGraphicsFiles();				if (_clothes[i] != null) {					_clothes[i].loadFile(_mayor.clothesDirectory + j.toString() + GameText.FILE_TYPE , false);					addChild(_clothes[i]);					_clothes[i].x = i*80 + 420;					_clothes[i].y = 120;					_clothes[i].button = true;					_clothes[i].buttonMode = true;					_clothes[i].scaleX = 0.75;					_clothes[i].scaleY = 0.75				}							}			_clothes[0].addEventListener(MouseEvent.CLICK, clothes1);			_clothes[1].addEventListener(MouseEvent.CLICK, clothes2);			_clothes[2].addEventListener(MouseEvent.CLICK, clothes3);			_clothes[3].addEventListener(MouseEvent.CLICK, clothes4);			_clothes[4].addEventListener(MouseEvent.CLICK, clothes5);						addChild(_backClothes);			addChild(_PLAYClothes);			_backClothes.label = "hair";								}				private function clothes1(MouseEvent):void{			_mayor.clothes = 1;			updateMayor();		}				private function clothes2(MouseEvent):void{			_mayor.clothes = 2;			updateMayor();		}				private function clothes3(MouseEvent):void{			_mayor.clothes = 3;			updateMayor();		}				private function clothes4(MouseEvent):void{			_mayor.clothes = 4;			updateMayor();		}				private function clothes5(MouseEvent):void{			_mayor.clothes = 5;			updateMayor();		}				private function onBackHair(MouseEvent):void {			for (var i:int = 0; i < _numHair; i++) {				if (_hair[i].parent == this) {					removeChild(_hair[i]);				}			}			if (_backHair.parent == this) {				removeChild(_backHair);			}			onEnterChooseParts();		}				private function cleanUpClothes():void{						for (var i:int = 0; i < _clothes.length; i++) {				if (_clothes[i].parent == this) {					removeChild(_clothes[i]);				}			}			if (_backClothes.parent == this) {				removeChild(_backClothes);			}						if(_PLAYClothes.parent == this){				removeChild(_PLAYClothes);			}					}				private function onBackClothes(MouseEvent) {			cleanUpClothes();			onEnterChooseParts();		}						private function loadHairButtons():void {			for (var i:int = 0; i <= 3; i++) {				var file:String = GameText.PICTURE_DIRECTORY + GameText.MAYOR_DIRECTORY + _mayor.gender + GameText.BUTTONS_DIRECTORY + GameText.HAIR_DIRECTORY + GameText.ROOT_FILENAME;				var j:Number = i + 1;				file += j.toString() + GameText.FILE_TYPE;				trace(file);				_hair[i] = new DisplayGraphicsFiles();				if (_hair[i] != null) {					_hair[i].loadFile(file);					addChild(_hair[i]);					_hair[i].x = i*90 + 450;					_hair[i].y = 180;					_hair[i].button = true;					_hair[i].buttonMode = true;					_hair[i].scaleX = 0.8;					_hair[i].scaleY = 0.8;				} else {					trace("hair not allocated..");				}							}						addChild(_backHair);			_backHair.label = "clothes";			_hair[0].addEventListener(MouseEvent.CLICK, hair1);			_hair[1].addEventListener(MouseEvent.CLICK, hair2);			_hair[2].addEventListener(MouseEvent.CLICK, hair3);			_hair[3].addEventListener(MouseEvent.CLICK, hair4);		}				private function hair1(MouseEvent):void {			_mayor.hair = 1;			updateMayor();		}		private function hair2(MouseEvent):void {			_mayor.hair = 2;			updateMayor();		}		private function hair3(MouseEvent):void {			_mayor.hair = 3;			updateMayor();		}		private function hair4(MouseEvent):void {			_mayor.hair = 4;			updateMayor();		}		private function onChooseClothes(e:MouseEvent):void {			onExitChooseParts();			onEnterChooseClothes();		}		private function onEnterChooseClothes() {			loadClothesButtons();		}		private function onGenderChosen(MouseEvent):void {			onExitGender();			onEnterChooseParts();		}		private function onEnterChooseParts():void {			addChild(_hairBtn);			addChild(_clothesBtn);			_backBtn2 = new GameButtonMayor(_xLeft, _yVal, 50, 60, GameText.PREVIOUS_SCREEN);			_backBtn2.addEventListener(MouseEvent.CLICK, onBackChooseParts);			addChild(_backBtn2);			addChild(_PLAYBtn);		}		private function onExitChooseParts():void {			//removeChild(_eyesBtn);			//removeChild(_noseBtn);			//_game.onExitDesignMayorScreen();			if(_hairBtn.parent == this){				removeChild(_hairBtn);			}			if(_clothesBtn.parent == this){				removeChild(_clothesBtn);			}			if(_backBtn2.parent == this){				removeChild(_backBtn2);			}			if(_PLAYClothes.parent == this){				removeChild(_PLAYClothes);			}								}		private function onBackChooseParts(MouseEvent):void {			onExitChooseParts();			addChild(_maleBtn);			addChild(_femaleBtn);			addChild(_randomBtn);			addChild(_PLAYBtn);		}		private function switchMayors():void {			updateMayor();			_nextBtn.disabled = false;		}		private function mayor1(MouseEvent):void {			_mayor.body = 1;			switchMayors();			updateMayor();		}		private function mayor2(MouseEvent):void {			_mayor.body = 2;			switchMayors();			updateMayor();		}		private function mayor3(MouseEvent):void {			_mayor.body = 3;			switchMayors();			updateMayor();		}				private function onChooseMale(MouseEvent):void {						onEnterGenderScreen();			if(_mayor.gender != GameText.MALE_DIRECTORY){				_nextBtn.disabled = true;			}			if (_PLAYBtn.parent == this) {				removeChild(_PLAYBtn);			}			_mayor.gender = GameText.MALE_DIRECTORY;			loadMayors();		}		private function onEnterGenderScreen():void {			if(_maleBtn.parent == this){				removeChild(_maleBtn);			}			if(_femaleBtn.parent == this){				removeChild(_femaleBtn);			}			if (_randomBtn.parent == this) {				removeChild(_randomBtn);			}			if (_PLAYBtn.parent == this) {				removeChild(_PLAYBtn);			}						addChild(_backBtn);			addChild(_nextBtn);		}		private function onChooseFemale(MouseEvent):void {						if(_mayor.gender != GameText.FEMALE_DIRECTORY){				_nextBtn.disabled = true;			}						onEnterGenderScreen();			while(_PLAYBtn.parent == this) {				removeChild(_PLAYBtn);			}			_mayor.gender = GameText.FEMALE_DIRECTORY;			trace(_mayor.gender);			loadMayors();								}				private function onBackGender(MouseEvent):void {			onExitGender();			addChild(_maleBtn);			addChild(_femaleBtn);			addChild(_PLAYBtn);			addChild(_randomBtn);		}				private function onExitGender():void {			if (_backBtn.parent == this) {				removeChild(_backBtn);			}			if (_nextBtn.parent == this) {				removeChild(_nextBtn);			}			if(_PLAYBtn.parent == this){				removeChild(_PLAYBtn);			}			for (var i:int = 0; i <= 2; i++) {				if(_mayors[i].parent == this){					removeChild(_mayors[i]);				}			}		}				private function onExitDesignMayorScreen() {			//_player.stop();			_game.onExitDesignMayorScreen();					}		public function onEnterDesignMayorScreen() {			//_player.loadSound(GameText.SOUNDS_FOLDER + GameText.ISLAND_MUSIC);			//_player.play();			//Load Mayor bodies		}		private function onMayorComplete(MouseEvent):void {			onExitDesignMayorScreen();			//_game.onExitDesignMayorScreen();		}		private function cleanUp():void {		}						private function onPLAYClothes(MouseEvent):void{						cleanUpClothes();			onExitDesignMayorScreen();		}	}}