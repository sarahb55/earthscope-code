package earthscope.views{		import earthscope.controller.GameEngine;import earthscope.utils.AlertBox;import earthscope.models.VolcanoData;import earthscope.models.TownData;import earthscope.models.MonitorData;import earthscope.models.MayorData;import earthscope.events.VolcanoEruptsEvent;import earthscope.utils.SeismoGraph;import earthscope.utils.GPSMonitor;import earthscope.utils.GameButton;import earthscope.utils.SmallGameButton;import earthscope.utils.DisplayGraphicsFiles;import earthscope.utils.SoundPlayer;import earthscope.utils.PlayVideos;import earthscope.utils.GameAlertBox;import earthscope.text.GameText;import earthscope.utils.GameHelpBox;import earthscope.utils.TinyGameButton;import earthscope.events.*;import flash.utils.Timer;import flash.events.TimerEvent;import flash.events.Event;import flash.events.MouseEvent;import earthscope.views.VolcanoView;import earthscope.views.GlobalScreenView;import earthscope.views.MayorView;import flash.geom.Rectangle;import flash.utils.Timer;import flash.text.TextField;import flash.display.Sprite;		public class OfficeScreenView  extends Sprite{				var _back:DisplayGraphicsFiles;		var _palm:DisplayGraphicsFiles;		var _phone:DisplayGraphicsFiles;		var _computer:DisplayGraphicsFiles;		var _seismo:SeismoGraph;		var _town:TownData;		var _mayor:MayorData;		var _gpsMonitor:GPSMonitor;		var _televisonMonitorFrame:DisplayGraphicsFiles;		var _volcanoView:VolcanoView;		var _volcano:VolcanoData;		var _flvPlayer:PlayVideos				var _pauseBtn:TinyGameButton;		var _resumeBtn:TinyGameButton;		var _helpBtn:TinyGameButton;		var _globalFront:GlobalScreenView;				var seismoRect: Rectangle;		var gpsRect:Rectangle;		var seismoBox:Sprite;		var gpsBox:Sprite;				var _timer:Timer;		var j:int;		var k:Number = 10;		var _pause:Boolean = false;		var _fadeBox:Sprite;		var _fadeRext:Rectangle;		var _fade:Boolean = false;			var _game:GameEngine;		var _doneBtn:GameButton;		var _player:SoundPlayer;		var _alert:GameAlertBox;		var _help:GameHelpBox;		var _showHelp:Boolean = true;		var _phoneTicks:int = 0;		private var _mid:TextField;		private var _mayorView:MayorView;				public function OfficeScreenView (game:GameEngine, volcanoView:VolcanoView, volcano:VolcanoData, town:TownData, mayor:MayorData, front:GlobalScreenView){						_game = game;			_volcano = volcano;			_town = town;			_volcanoView = volcanoView;			_mayor = mayor;			_globalFront = front;						init();					}				public function get fade(){			return _fade;		}				public function set mayor(mayor:MayorData){						_mayor = mayor;			_mayorView.mayor = _mayor;						trace("Returning Mayor...");						trace(_mayor.hair + " " +  _mayor.clothes + " "  + _mayor.gender);					}		private function init(){						addChild(_volcanoView);						_timer = new Timer(100, 1000);			_timer.start();			_timer.addEventListener(TimerEvent.TIMER,  updatePhone);			j = -1;			_pause = true;						_back = new DisplayGraphicsFiles() ;			_back.loadFile(GameText.PICTURE_DIRECTORY + GameText.OFFICE_BACKGROUND);			_back.y = 0;			_back.x = 0;						addChild(_back);						/*			_televisonMonitorFrame = new DisplayGraphicsFiles() ;			_televisonMonitorFrame.loadFile(GameText.PICTURE_DIRECTORY + GameText.TELEVISON_MONITOR_COMPUTER);			addChild(_televisonMonitorFrame);			_televisonMonitorFrame.y = GameText.BACK_Y;			_televisonMonitorFrame.x = GameText.BACK_X;			*/			drawMonitors();			/*			_palm = new DisplayGraphicsFiles();			_palm.loadFile(GameText.PICTURE_DIRECTORY + GameText.OFFICE_PALM, true);			addChild(_palm);			_palm.x = 802;			_palm.y = 120;			*/			_helpBtn = new TinyGameButton(75, GameText.LOWER_BORDER_Y + 35, 40, 100,GameText.HIDE_HELP);			_helpBtn.addEventListener(MouseEvent.CLICK, toggleHelp);			_globalFront.addChild(_helpBtn);						/*			_computer = new DisplayGraphicsFiles();			_computer.loadFile(GameText.PICTURE_DIRECTORY + GameText.OFFICE_COMPUTER, true);			addChild(_computer);			_computer.x = 580;			_computer.y = 230;			*/			/*			_phone  = new DisplayGraphicsFiles();			_phone.loadFile(GameText.PICTURE_DIRECTORY + GameText.OFFICE_PHONE, true);			_phone.x= 424 + GameText.BACK_X; ;			_phone.y = 260 + GameText.BACK_Y;			_phone.buttonMode = true;			_phone.useHandCursor = true;			_phone.addEventListener(MouseEvent.CLICK, onAnswerPhone);			addChild(_phone);			*/			_player = new SoundPlayer();			_player.loadSound(GameText.SOUNDS_FOLDER + GameText.TELEPHONE_RING);			_player.stop();						/*			_back.x = GameText.BACK_X;			_back.y = GameText.BACK_Y;			*/			/*			_flvPlayer = new PlayVideos();			_flvPlayer.initPlayer(525, 43, 250, 150);			_televisonMonitorFrame.addChild(_flvPlayer);			_flvPlayer.play(GameText.SCROLLING_TEXT);			*/						_pauseBtn = new TinyGameButton(480 - 130,GameText.LOWER_BORDER_Y + 35, 165, 60, GameText.PAUSE_BTN);			_pauseBtn.disabled = true;			//_globalFront.addChild(_pauseBtn);												//_mid.y = GameText.LOWER_BORDER_Y + 35;			/*			_resumeBtn = new TinyGameButton(480,GameText.LOWER_BORDER_Y + 35, 165, 60, GameText.RESUME_BTN);			_resumeBtn.disabled = true;			//_globalFront.addChild(_resumeBtn);						_pauseBtn.addEventListener(MouseEvent.CLICK, onPause);			_resumeBtn.addEventListener(MouseEvent.CLICK, onResume);						_town.addEventListener(AnxiousTownPersonEvent.HIGH_ANXIETY, onHighAnxiety);			_volcano.addEventListener(VolcanoEruptsEvent.VOLCANO_ERUPTS, onVolcanoEruption);			_volcano.addEventListener(ScientistOnNewsEvent.ADVISOR, scientistOnNews);						_seismo.addEventListener(MouseEvent.CLICK, seismoClicked);			_seismo.addEventListener(MouseEvent.MOUSE_OVER, showSeismoHelp);			_seismo.addEventListener(MouseEvent.MOUSE_OUT, hideSeismoHelp);						_gpsMonitor.addEventListener(MouseEvent.CLICK, gpsClicked);			_gpsMonitor.addEventListener(MouseEvent.MOUSE_OVER, showGPSHelp);			_gpsMonitor.addEventListener(MouseEvent.MOUSE_OUT, hideGPSHelp);						_phone.addEventListener(MouseEvent.MOUSE_OVER, showPhoneHelp);			_phone.addEventListener(MouseEvent.MOUSE_OUT, hidePhoneHelp);						_town.addEventListener(BeachFestivalEvent.BEACH_FESTIVAL, onBeachFestivalRequest);						_help = new GameHelpBox();			*/			_mayorView = new MayorView(GameText.BACK_X + 150, GameText.BACK_Y + 50, _mayor);			addChild(_mayorView);																				}				public function toggleHelp(MouseEvent):void{						_showHelp = !_showHelp;			if(_showHelp == true){								_helpBtn.label = GameText.HIDE_HELP; ;							}			else{				_helpBtn.label = GameText.SHOW_HELP; 			}								}				public function showSeismoHelp(MouseEvent){									if(_showHelp && _game.gameStarted){				_help = new GameHelpBox();				_help.location = seismoRect;				_help.loadText(GameText.TEXT_DIRECTORY + GameText.SEISMO_HELP);				this.addChild(_help);				trace("showSeismoHelp");							}					}				public function hideSeismoHelp(MouseEvent){						if(_help.parent == this){				removeChild(_help);			}			trace("hide SeismoHelp out");					}						public function showGPSHelp(MouseEvent){									if(_showHelp && _game.gameStarted){				_help = new GameHelpBox();				_help.location = gpsRect;				_help.loadText(GameText.TEXT_DIRECTORY + GameText.GPS_HELP);				this.addChild(_help);				trace("showSeismoHelp");							}					}				public function hideGPSHelp(MouseEvent){						if(_help.parent == this){				removeChild(_help);			}			trace("hide SeismoHelp out");					}								public function showPhoneHelp(MouseEvent){			if(_showHelp == true){				_help = new GameHelpBox();				_help.location = new Rectangle(_phone.x+ 70, _phone.y -160, 40, 40);				_help.loadText(GameText.TEXT_DIRECTORY + GameText.PHONE_HELP);				this.addChild(_help);				trace("show phone Help");							}		}				public function hidePhoneHelp(MouseEvent){						if(_help.parent == this){				removeChild(_help);			}			trace("hide phone Help out");					}				private function onBeachFestivalRequest(BeachFestivalEvent):void{						_alert = new GameAlertBox();			addChild(_alert);			_alert.loadText(GameText.TEXT_DIRECTORY + GameText.BEACH_FESTIVAL);			_alert.x = 200;			_alert.y  = 70;						_alert.addEventListener(PlayerDecidesEvent.CHOOSE_YES, mayorApprovesBeachFestival);			_alert.addEventListener(PlayerDecidesEvent.CHOOSE_NO, mayorDeniesBeachFestival);		}				private function mayorApprovesBeachFestival(PlayerDecidesEvent):void{									trace("Mayor approves beach festival");			_mayor.mayorApprovesBeachFestival();								}				private function mayorDeniesBeachFestival(PlayerDecidesEvent):void{									trace("Mayor denies beach festival");			_mayor.mayorDeniesBeachFestival();								}								private function drawMonitors(){						seismoRect= new Rectangle(324, 148, 126, 98);			gpsRect = new Rectangle(324, 30, 126, 98);			seismoBox = new Sprite();			gpsBox = new Sprite();						with (gpsBox.graphics) {                               beginFill(0xFFFF99, 1.0);                drawRect(gpsRect.x, gpsRect.y, gpsRect.width, gpsRect.height);                endFill();            }						_back.addChild(gpsBox);						with (seismoBox.graphics) {                               beginFill(0xFFFFFF, 1.0);                drawRect(seismoRect.x, seismoRect.y, seismoRect.width, seismoRect.height);                endFill();            }						_back.addChild(seismoBox);						_seismo = new SeismoGraph(seismoRect, _volcano);			_gpsMonitor = new GPSMonitor(gpsRect, _volcano);						_televisonMonitorFrame.addChild(_gpsMonitor);			_televisonMonitorFrame.addChild(_seismo);								}				public function ringPhone(){						_player.play();			_timer.start();					}						public function initGame():void{						trace("Starting game...");		}				public function onEnterGameScreen(){						/*						if(Body == null){				var file:String = GameText.PICTURE_DIRECTORY + GameText.MAYOR_BODY;				file += _mayor.body +".png";				trace(file);				_mayorBody = new DisplayGraphicsFiles();				_mayorBody.loadFile(file, true);				addChild(_mayorBody);				_mayorBody.y = 150;				_mayorBody.x = 100;				_mayorBody.scaleX = 1.5;				_mayorBody.scaleY = 1.5;			}*/						_mayorView.updateDisplay();									if(_game.gameStarted){								resume();				trace("entering game screen...");			}			else{												ringPhone();							}						_globalFront.addChild(_pauseBtn);			_globalFront.addChild(_resumeBtn);								}				public function onExitGameScreen(){						if(_pause == false){				pause();			}			_globalFront.removeChild(_pauseBtn);			_globalFront.removeChild(_resumeBtn);			_player.stop();			_flvPlayer.stop();			trace("exiting game screen...");		}				function seismoClicked(MouseEvent):void{				trace("Seismo clicked");			if(_game.gameStarted){										onExitGameScreen();					_game.requestSeismologyAdvisor();					_game.onExitGameScreen();					_game.onEnterMonitorScreen();			}														}				function gpsClicked(MouseEvent):void{						trace("GPS clicked");						if(_game.gameStarted){										onExitGameScreen();					_game.requestGPSAdvisor();					_game.onExitGameScreen();					_game.onEnterMonitorScreen();				}													}				public function pause():void{						trace("Game paused...");			if(_pauseBtn.disabled == false){			_game.stop();			_pauseBtn.disabled = true;			_resumeBtn.disabled = false;			_flvPlayer.stop();			_player.stop();			_gpsMonitor.pause();			_seismo.pause();			_volcanoView.stop();			_pause = true;		}	 								}				private function onPause(MouseEvent):void{				 pause();	 	 		}				public function resume(){						trace("Game started...");		if(_resumeBtn.disabled == false || !_pause){			_game.start();			_resumeBtn.disabled = true;			_pauseBtn.disabled = false;			_flvPlayer.play(GameText.SCROLLING_TEXT);			_gpsMonitor.start();			_seismo.start();			_pause = false;		}									}function onResume(MouseEvent):void{			resume();	}				function onHighAnxiety(AnxiousTownPersonEvent){		onExitGameScreen();	_game.onEnterMonitorScreen();	}function scientistOnNews(ScientistOnNewsEvent):void{		onExitGameScreen();		_game.onEnterMonitorScreen();}function onVolcanoEruption(VolcanoEruptsEvent):void{		_game.stop();	pause();	_resumeBtn.disabled = true;					_timer = new Timer(100, 1000);		_timer.start();		_timer.addEventListener(TimerEvent.TIMER,  fadeToBlack);				k = 40;	 	_fadeBox = new Sprite();		//_fadeBox.addEventListener(MouseEvent.CLICK, onPlayerLoses);	 	_fadeRext = new Rectangle();		addChild(_fadeBox);		}function fadeToBlack(e:TimerEvent){		trace("fading... " + k);	_fade = true;		with (_fadeBox.graphics) {                				if(k > 0){				lineStyle(2, 0x000000);				beginFill(0x000000, 1/k);                drawRect(stage.x + GameText.BACK_Y, GameText.BACK_X + stage.y, stage.width - 2*GameText.BACK_X, stage.height - 2*GameText.BACK_Y);                endFill();				}            		}		k--;		if(k == 1){						_timer.stop();			onExitGameScreen();			_game.onExitGameScreen();			_game.onEnterFinalScreen();											}            		}							function updatePhone(TimerEvent):void{		if(_game.ringing()){		_phone.x += j;		_phone.y -= j;		j *= -1;	}		_phoneTicks++;		}			public function onAnswerPhone(e:MouseEvent):void{			onExitGameScreen();			if(!_game.gameStarted){								_mayor.requestScienceAdvisor();				_game.gameStarted = true;				_pauseBtn.disabled = false;				_timer.stop();				_player.stop();				_game.onExitGameScreen();				_game.onEnterMonitorScreen();			}			else{								_game.onEnterPhoneZoomScreen();			}									pause();		}	}		}